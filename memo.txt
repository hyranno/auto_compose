npm run dev
http://localhost:3000

TypeScript + SolidJS + SCSS
Tone.js

パラメータ
  JSON Schema + JSON ?
  Protocol Buffers ?

位置付け
  作曲補助
やらないこと
  完璧な音楽を目指す
  テクニックを網羅する


TODO:
  SolidJS: Hello World
  ピアノロールの表示
  Keyの表示
  Scaleの表示
  Cadenceの生成, 表示
    WeightedRandom
    Timeline
    MarkovChain
  ChordRootの生成, 表示
  Chordの生成, 表示
  Chord音の再生
    Tone.js
    TunePlayer.tsx
  //
  Rhythmの生成
  Noteの生成, 表示
  Note音の再生
  設定画面の表示
  既存データからの展開
  Chord生成の改善


リファクタリング
  (new Generator()).generate() じゃなくて generate() だけでよくないか
  Cadence以前に終止形Class/Generatorがあった方がよいか


画面構成
  パラメータ設定
    ...
  出力結果
    ピアノロール
      縦に時間軸、横に音高を取る方が見やすい?
      一般的には横に時間軸
    Key, Scale, Chord, Note ... 音高に色
    Rhythm ... 罫線
    Cadence ... 左端に表記
    音高 ... 上端に表記



Key
  絶対音高
  12平均律, MIDIノートナンバー(69 = A4 = 440Hz)
Scale
  Keyからの相対音高ベクタ
  static でプリセットを取り揃える
Cadence
  Enum
CadenceGenerator
  オートマトン?
  パラメータ
    seed
    T/D/SD -> T/D/SD 重み
    小説位置ごとの T/D/SD 重み
  gen() -> Timeline<Cadence>
Chord
  Scale上でのKeyからの相対index
ChordGenerator
  無記憶情報源
  パラメータ
    seed
    T/D/SD ごとの WeightedRandom<Chord>
  gen(Timeline<Cadence>) -> Timeline<Chord>
Rhythm
  木
  パラメータ
    seed
NoteGenerator
  パラメータ
    seed
